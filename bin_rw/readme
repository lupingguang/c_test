1.原理
C库函数读写二进制文件，将文件使用少量格式分段存储用户格式化数据
例如从第5个字节[字节编号0开始]开始存储一个结构体，结构体中包含5个int型成员，第1个为校验码[9]，第2个到第5个为有效数据[4,3,2,1]
实际会在第5字节处存放一个起始地址[本例中为5，也叫做mark]，然后偏移10个字节后开始存储[10个字节用来存放起始地址]，
最终在bin文件中的分布如下：
00000000  00 00 00 00 00 05 00 00  00 00 00 00 00 00 00 09  |................|
00000010  00 00 00 04 00 00 00 03  00 00 00 02 00 00 00 01  |................|

2.使用步骤
每次运行时需首先检查bin文件有效性，方法是读取指定位置的起始地址，一般读取位置地址 = 存放的地址即为校验正确
校验失败的情况有：
1、第一次运行，还未创建bin文件
2、用户修改了存储起始地址
3、bin文件损坏

如果校验失败，都会remove掉这个bin文件[第一次运行时的校验失败除外]
后面类实例化时会重新新建该bin文件
新建该文件后，必须执行一次打mark动作，这样下次运行时才能校验通过

3.运行程序时 跟任意一个参数就会触发写读操作，验证bin文件是否可正常使用
注意:写数据的实际起始地址是用户制定地址+10字节的偏移，这样可保证每次更新数据不会冲掉mark，导致下次运行校验失败，再新建文件
+10字节偏移逻辑在源文件的read与save中已写死，可根据需要调整

